## Main configuration context
#events {
#    worker_connections 1024;  # Adjust as needed
#}
#
#http {
#    # Redirect all HTTP traffic to HTTPS
#    server {
#        listen 80;
#        listen [::]:80; 	
#        server_name  local.domain.com;
#        return 301 https://$host$request_uri;
#    }
#
#    # SSL configuration
#    server {
#        listen 443 ssl http2;
#        listen [::]:443 ssl http2; 	
#        server_name domain.com;
#        ssl_certificate      /etc/letsencrypt/live/www.domain.com/fullchain.pem;
#        ssl_certificate_key  /etc/letsencrypt/live/www.domain.com/privkey.pem;
#
#        # Improve HTTPS performance with session resumption
#        ssl_session_cache shared:SSL:10m;
#        ssl_session_timeout 10m;
#
#        # Enable server-side protection against BEAST attacks
#        ssl_protocols TLSv1.2;
#        ssl_prefer_server_ciphers on;
#        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";
#
#        # RFC-7919 recommended: https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
#        ssl_dhparam /etc/ssl/ffdhe4096.pem;
#        ssl_ecdh_curve secp521r1:secp384r1;
#
#        # Additional Security Headers
#        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
#        add_header X-Frame-Options DENY always;
#        add_header X-Content-Type-Options nosniff always;
#        add_header X-Xss-Protection "1; mode=block" always;
#
#        # Enable OCSP stapling 
#        ssl_stapling on;
#        ssl_stapling_verify on;
#        ssl_trusted_certificate /etc/letsencrypt/live/local.domain.com/fullchain.pem;
#        resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] valid=300s; # Cloudflare
#        resolver_timeout 5s;
#
#        # Required for LE certificate enrollment using certbot
#        location '/.well-known/acme-challenge' {
#            default_type "text/plain";
#            root /var/www/local.domain.com;
#        }
#        location / {
#            root /var/www/html;
#        }
#    }
#}
#


#user www-data;
#worker_processes auto;
#pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;
#
#events {
#    worker_connections 1024;
#    # multi_accept on;
#}
#
#http {
#    # Basic Settings
#    sendfile on;
#    tcp_nopush on;
#    tcp_nodelay on;
#    keepalive_timeout 65;
#    types_hash_max_size 2048;
#    server_tokens off;
#
#    # MIME Types
#    include /etc/nginx/mime.types;
#    default_type application/octet-stream;
#
#    # Logging
#    access_log /var/log/nginx/access.log;
#    error_log /var/log/nginx/error.log;
#
#    # Gzip Compression
#    gzip on;
#    gzip_disable "msie6";
#    gzip_vary on;
#    gzip_proxied any;
#    gzip_comp_level 6;
#    gzip_buffers 16 8k;
#    gzip_http_version 1.1;
#    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
#
#    # Virtual Host Configs
#    include /etc/nginx/conf.d/*.conf;
#    include /etc/nginx/sites-enabled/*;
#}

###################SELF-SIGENED####################################

# Main Nginx Configuration
#events {
#    worker_connections 1024;
#}
#
#http {
#    # HTTP Server Block (Redirects to HTTPS)
#    server {
#        listen 80;
#        server_name local.domain.com;
#
#        # Redirect all HTTP requests to HTTPS
#        return 301 https://$host$request_uri;
#    }
#
#    # HTTPS Server Block
#    server {
#        listen 443 ssl;
#        server_name local.domain.com;
#
#        # SSL Certificate and Key
#        ssl_certificate /etc/ssl/certs/local.domain.com.crt;
#        ssl_certificate_key /etc/ssl/private/local.domain.com.key;
#
#        # SSL Protocols and Ciphers
#        ssl_protocols TLSv1.2 TLSv1.3;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Root directory for the site
#        root /var/www/local.domain.com;
#        index index.html;
#
#        # Serve static files
#        location / {
#            try_files $uri $uri/ =404;
#        }
#
#        # Additional security headers (optional)
#        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#        add_header X-Content-Type-Options nosniff;
#        add_header X-Frame-Options DENY;
#        add_header X-XSS-Protection "1; mode=block";
#    }
#}





#################################################LOCAL CERTIFICATE AUTHORITY###########################
# Main Nginx Configuration
events {
    worker_connections 1024;
}

http {
    # HTTP Server Block (Redirects to HTTPS)
    server {
        listen 80;
        server_name local.domain.com;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS Server Block
    server {
        listen 443 ssl;
        server_name local.domain.com;

        # SSL Certificate and Key
        ssl_certificate /etc/ssl/certs/local.domain.com.crt;
        ssl_certificate_key /etc/ssl/private/local.domain.com.key;

        # SSL Protocols and Ciphers
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Root directory for the site
        root /var/www/local.domain.com;
        index index.html;

        # Logging (optional)
        access_log /var/log/nginx/local.domain.com.access.log;
        error_log /var/log/nginx/local.domain.com.error.log;

        # Serve static files
        location / {
            try_files $uri $uri/ =404;
        }

        # Additional security headers (optional)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";
    }
}
